#
# Fleet v2 HTTP API
# HTTP-based API for Fleet Protocol v2 serving for communication between the External Server and the end users.
#
# The version of the OpenAPI document: 1.0.0
#
# https://openapi-generator.tech
#
# NOTE: Auto generated by OpenAPI Generator (https://openapi-generator.tech).

CMAKE_MINIMUM_REQUIRED(VERSION 3.1)

PROJECT(bringauto-fleet-http-client-generated)

# Force -fPIC even if the project is configured for building a static library.
SET(CMAKE_POSITION_INDEPENDENT_CODE ON)
SET(CXX_STANDARD_REQUIRED ON)

IF(NOT CMAKE_CXX_STANDARD)
    SET(CMAKE_CXX_STANDARD 14)
ENDIF()

IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE Release)
ENDIF ()

FIND_PACKAGE(cpprestsdk REQUIRED)
FIND_PACKAGE(Boost REQUIRED)

INCLUDE(GNUInstallDirs)
INCLUDE(CMakePackageConfigHelpers)

FILE(GLOB_RECURSE HEADER_FILES "include/*.h")
FILE(GLOB_RECURSE SOURCE_FILES "src/*.cpp")

CMDEF_ADD_LIBRARY(
        LIBRARY_GROUP ${PROJECT_NAME}
        TYPE SHARED
        SOURCES ${SOURCE_FILES}
        INCLUDE_DIRECTORIES ${CMAKE_CURRENT_LIST_DIR}/include/
        INSTALL_INCLUDE_DIRECTORIES "include/"
        VERSION ${FLEET_HTTP_CLIENT_VERSION}
)
target_compile_options(${PROJECT_NAME}-shared
    PRIVATE
        $<$<OR:$<CXX_COMPILER_ID:Clang>,$<CXX_COMPILER_ID:AppleClang>,$<CXX_COMPILER_ID:GNU>>:
            -Wall -Wno-unused-variable>
)

IF (BUILD_SHARED_LIBS)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME}-shared PUBLIC Boost::headers cpprestsdk::cpprest)
ELSE()
    TARGET_LINK_LIBRARIES(${PROJECT_NAME}-shared PUBLIC Boost::headers cpprestsdk::cpprest crypto)
ENDIF()

IF (BRINGAUTO_INSTALL)
    CMDEF_INSTALL(
            TARGET ${PROJECT_NAME}-shared
            NAMESPACE fleet-http-client-shared::
    )
ENDIF ()